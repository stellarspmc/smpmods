plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "maven-publish"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.nucleoid.xyz" }
    maven { url "https://m2.dv8tion.net/releases" }
    maven { url "https://jitpack.io" }
    jcenter()
    mavenCentral()
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.yarn_mappings}")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")


    include modImplementation("eu.pb4:placeholder-api:${project.placeholder_version}")
    include modImplementation("net.dv8tion:JDA:${project.JDA_version}")
    include("com.fasterxml.jackson.core:jackson-databind:2.15.3")
    include("net.sf.trove4j:trove4j:3.0.3")
    include("org.apache.commons:commons-collections4:4.3")
    include("org.jetbrains:annotations:16.0.1")
    include("com.neovisionaries:nv-websocket-client:2.14")
    include("com.squareup.okhttp3:okhttp:4.10.0")
    include("com.fasterxml.jackson.core:jackson-annotations:2.15.3")
    include("com.fasterxml.jackson.core:jackson-core:2.15.3")
    include("com.squareup.okio:okio:3.4.0")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}